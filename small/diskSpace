# update interval in seconds
update_interval 5
 
# this is the number of times conky will update before quitting
# set to zero to run forever
total_run_times 0

# use double buffering (reduces flicker, may not work for everyone)
double_buffer yes

draw_shades no
draw_outline no
draw_graph_borders no      # borders around the graph, ex. cpu graph, network down speed grah
                           # does not include bars, ie. wifi strength bar, cpu bar
# .:: window border ::.
# you can add a border to the window by setting the border_width value to any number greater than 0 and by setting the draw_borders option to true
draw_borders no
border_width 0
stippled_borders 0
border_inner_margin 0
border_outer_margin 0

#  .:: window size ::.
# required if you have image backgrounds
minimum_size 195 96     # horizontal vertical

# .:: box alignment on screen ::.
alignment top_right	# top_left x 275 y 498
gap_x 4
gap_y 421

# .:: window settings ::.
own_window yes
own_window_type desktop
own_window_hints undecorated,below,sticky,skip_taskbar,skip_pager

# :: transparency configuration ::
own_window_transparent yes
own_window_argb_visual yes
# own_window_argb_value range: 0   transparent
#						       255 opaque
own_window_argb_value 255

default_color black   #                  		*
color1 e9e9e6 	      # grey | darker e5e5e5 e9e9e6 cccccc b2b2b2
color2 800020         # burgundy

# note: the moment you start using $voffset for the graphs, you end up with trailing spaces
#       hence the need to add a trailing negative $voffset on the last line to put all that space
#       within the conky box.  otherwise the height assigned in minimum_size will not be honored.
#
# use the parameter -n on ${image ..} to never cache and always update the image upon a change

TEXT
${image ~/scripts/conky/monochrome/small/diskSpace.png -n -p 0,0}\
${voffset 2} fedora
${voffset 5} ${fs_used /} ${color1}/ ${color}${fs_size /}
${color1}${if_match ${fs_used_perc /} > 90}${color2}${endif} ${fs_bar 4, 135 /}
${voffset 8} ${color}/home
${voffset 2} ${fs_used /home} ${color1}/ ${color}${fs_size /home}
${color1}${if_match ${fs_used_perc /home} > 90}${color2}${endif} ${fs_bar 4, 135 /home}
